pipeline {
    agent any
    
    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
        AWS_DEFAULT_REGION    = 'ap-south-1'
        ECR_REPOSITORY        = "804480554088.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        ARTIFACTORY_URL       = 'http://13.127.195.27:8081/artifactory/'
        ARTIFACTORY_REPO      = 'libs-release/'
    }
    
    stages {
        stage('Build Stage') {
            agent {
                label 'jfrog'
            }
            steps {
                sh 'mvn clean install'
            }
            post {
                success {
                    script {
                        def server = Artifactory.newServer(url: ARTIFACTORY_URL, credentialsId: 'jfrog')
                        def rtMaven = Artifactory.newMavenBuild()
                        rtMaven.deployer server: server, releaseRepo: ARTIFACTORY_REPO, snapshotRepo: 'libs-snapshot/'
                        rtMaven.tool = 'maven'
                        rtMaven.run(pom: 'pom.xml', goals: 'clean install')
                    }
                }
            }
        }
        
        stage('Deploy and Push to ECR') {
            agent {
                label 'jfrog'
            }
            steps {
                script {
                    // Download artifact from Artifactory
                    sh '''
                        curl -o jenkins-test-1.0.jar ${ARTIFACTORY_URL}${ARTIFACTORY_REPO}com/example/jenkins-test/1.0/jenkins-test-1.0.jar
                    
                        docker login -u AWS -p "$(aws ecr get-login-password --region ${AWS_DEFAULT_REGION})" ${ECR_REPOSITORY}
                    
                        sudo docker build -t sstest .
                        sudo docker tag sstest:latest ${ECR_REPOSITORY}/sstest:latest
                        sudo docker push ${ECR_REPOSITORY}/sstest:latest
                    '''
                }
            }
        }
    }
}
